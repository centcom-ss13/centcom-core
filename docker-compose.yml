version: '3.3'

services:
  db:
    image: mysql:5.7
    restart: always
    volumes:
      - db_data:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: wowItsMeAPassword
      MYSQL_DATABASE: centcom
    ports:
      - 3306:3306
    networks:
      - hostInternal
      - dockerInternal

  adminer:
    image: adminer
    restart: always
    ports:
      - 8080:8080
    networks:
      - hostExternal
      - dockerInternal

  memcached:
    image: memcached:1.5.14
    restart: always
    ports:
      - 11211:11211
    networks:
      - dockerInternal

  api:
    build: './docker/api'
    restart: always
    depends_on:
      - db
    environment:
      - CENTCOM_API_SSL
      - CENTCOM_API_PORT
      - CENTCOM_API_HOST
      - CENTCOM_DEBUG
      - CENTCOM_DB_DATABASE
      - CENTCOM_DB_HOST
      - CENTCOM_DB_PASSWORD
      - CENTCOM_DB_PORT
      - CENTCOM_DB_USER
      - CENTCOM_FRONT_END_PORT
      - CENTCOM_FRONT_END_SSL
      - CENTCOM_FRONT_END_URL
      - CENTCOM_SSL_CERT_FILE
      - CENTCOM_SSL_KEY_FILE
      - CENTCOM_SSL_KEY_PASSPHRASE
      - NODE_ENV
    ports:
      - 3000:3000
    networks:
      - hostExternal
      - dockerInternal

  build-ui:
    build: './docker/buildUI'
    restart: always
    volumes:
      - ui_assets:/usr/src/app/dist
    environment:
      - CENTCOM_API_SSL
      - CENTCOM_API_PORT
      - CENTCOM_API_HOST
      - CENTCOM_DEBUG
      - CENTCOM_FRONT_END_PORT
      - CENTCOM_FRONT_END_SSL
      - CENTCOM_FRONT_END_URL
    networks:
      - hostExternal
      - dockerInternal


  run-ui:
    build: './docker/runUI'
    restart: always
    volumes:
      - ui_assets:/var/www
    depends_on:
      - build-ui
    environment:
      - CENTCOM_API_SSL
      - CENTCOM_API_PORT
      - CENTCOM_API_HOST
      - CENTCOM_DEBUG
      - CENTCOM_FRONT_END_PORT
      - CENTCOM_FRONT_END_SSL
      - CENTCOM_FRONT_END_URL
    ports:
      - 80:80
    networks:
      - hostExternal

volumes:
  db_data:
  ui_assets:

networks:
  hostExternal:
    external: true
    name: eth0
  hostInternal:
    external: true
    name: eth1
  dockerInternal:
    driver: bridge